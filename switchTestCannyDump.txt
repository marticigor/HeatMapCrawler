switch (augPix.getDirEnum()){
                    
                    case N : {
    
                        	Pixel a = in.getPixel(outPix.getX(), outPix.getY());
                        	int dx = toAugmented.get(outPix).getDirEnum().getxMove();
                        	int dy = toAugmented.get(outPix).getDirEnum().getyMove();
                        	//System.out.println(" dxN "+dx + " dyN "+dy);
                        	Pixel b = in.getPixel(outPix.getX() + dx, outPix.getY() + dy);
                        	if((b.getRed() > a.getRed()) == false){
                        	    outPix.setRed(255);
                        	    outPix.setGreen(255);
                        	    outPix.setBlue(255);                        		
                        	}
                    	    
                    };break;
                    case NE : {
               	    
                        	Pixel a = in.getPixel(outPix.getX(), outPix.getY());
                        	int dx = toAugmented.get(outPix).getDirEnum().getxMove();
                        	int dy = toAugmented.get(outPix).getDirEnum().getyMove();
                        	//System.out.println(" dxN "+dx + " dyN "+dy);
                        	Pixel b = in.getPixel(outPix.getX() + dx, outPix.getY() + dy);
                        	if((b.getRed() > a.getRed()) == false){
                        	    outPix.setRed(255);
                        	    outPix.setGreen(0);
                        	    outPix.setBlue(255);                        		
                        	}
                    	
                    	
                    };break;
                    case E : {                  		

                        	Pixel a = in.getPixel(outPix.getX(), outPix.getY());
                        	int dx = toAugmented.get(outPix).getDirEnum().getxMove();
                        	int dy = toAugmented.get(outPix).getDirEnum().getyMove();
                        	//System.out.println(" dxN "+dx + " dyN "+dy);
                        	Pixel b = in.getPixel(outPix.getX() + dx, outPix.getY() + dy);
                        	if((b.getRed() > a.getRed()) == false){
                        	    outPix.setRed(0);
                        	    outPix.setGreen(255);
                        	    outPix.setBlue(0);                        		
                        	}
                    	    
                    };break;
                    case SE : {

                        	Pixel a = in.getPixel(outPix.getX(), outPix.getY());
                        	int dx = toAugmented.get(outPix).getDirEnum().getxMove();
                        	int dy = toAugmented.get(outPix).getDirEnum().getyMove();
                        	//System.out.println(" dxN "+dx + " dyN "+dy);
                        	Pixel b = in.getPixel(outPix.getX() + dx, outPix.getY() + dy);
                        	if((b.getRed() > a.getRed()) == false){
                        	    outPix.setRed(100);
                        	    outPix.setGreen(25);
                        	    outPix.setBlue(100);                        		
                        	}
                    	    
                    };break;
                    
					case NW:{

                    	Pixel a = in.getPixel(outPix.getX(), outPix.getY());
                    	int dx = toAugmented.get(outPix).getDirEnum().getxMove();
                    	int dy = toAugmented.get(outPix).getDirEnum().getyMove();
                    	//System.out.println(" dxN "+dx + " dyN "+dy);
                    	Pixel b = in.getPixel(outPix.getX() + dx, outPix.getY() + dy);
                    	if((b.getRed() > a.getRed()) == false){
                    	    outPix.setRed(100);
                    	    outPix.setGreen(100);
                    	    outPix.setBlue(255);                        		
                    	}
                	    
					}
						break;
					case S:{
						
                    	Pixel a = in.getPixel(outPix.getX(), outPix.getY());
                    	int dx = toAugmented.get(outPix).getDirEnum().getxMove();
                    	int dy = toAugmented.get(outPix).getDirEnum().getyMove();
                    	//System.out.println(" dxN "+dx + " dyN "+dy);
                    	Pixel b = in.getPixel(outPix.getX() + dx, outPix.getY() + dy);
                    	if((b.getRed() > a.getRed()) == false){
                    	    outPix.setRed(100);
                    	    outPix.setGreen(100);
                    	    outPix.setBlue(100);                        		
                    	}
                	    
					}
						break;
					case SW:{
						
                    	Pixel a = in.getPixel(outPix.getX(), outPix.getY());
                    	int dx = toAugmented.get(outPix).getDirEnum().getxMove();
                    	int dy = toAugmented.get(outPix).getDirEnum().getyMove();
                    	//System.out.println(" dxN "+dx + " dyN "+dy);
                    	Pixel b = in.getPixel(outPix.getX() + dx, outPix.getY() + dy);
                    	if((b.getRed() > a.getRed()) == false){
                    	    outPix.setRed(255);
                    	    outPix.setGreen(100);
                    	    outPix.setBlue(100);                        		
                    	}
                	    
					}
						break;
					case W:{
						
                    	Pixel a = in.getPixel(outPix.getX(), outPix.getY());
                    	int dx = toAugmented.get(outPix).getDirEnum().getxMove();
                    	int dy = toAugmented.get(outPix).getDirEnum().getyMove();
                    	//System.out.println(" dxN "+dx + " dyN "+dy);
                    	Pixel b = in.getPixel(outPix.getX() + dx, outPix.getY() + dy);
                    	if((b.getRed() > a.getRed()) == false){
                    	    outPix.setRed(0);
                    	    outPix.setGreen(0);
                    	    outPix.setBlue(255);                        		
                    	}
					}
						break;
					case ZERO:{
						
                	    //outPix.setRed(255);
                	    //outPix.setGreen(255);
                	    //outPix.setBlue(0);
						
					}
						break;
					case ERROR : {
                    	throw new RuntimeException("ERROR"); 
                    }
					default:
						throw new RuntimeException("DEFAULT");
                    }